apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "corndogs.fullname" . }}
  labels:
    {{- include "corndogs.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "corndogs.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
        {{- if .Values.appconfig.prometheusEnabled }}
        prometheus.io/scrape: "true"
        prometheus.io/path: /metrics
        prometheus.io/port: "8080"
        {{- end}}
      labels:
        {{- include "corndogs.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "corndogs.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          #image: {{ if .Values.imageName }}{{ .Values.imageName }}{{ else }}"{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"{{ end }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: LOGLEVEL
              value: {{ .Values.appconfig.loglevel }}
            - name: PROMETHEUS_ENABLED
              value: {{ .Values.appconfig.prometheusEnabled | quote }}
            {{- if .Values.database.dbname }}
            - name: DATABASE_NAME
              value: {{ .Values.database.dbname }}
            {{- end }}
            {{- if .Values.database.host }}
            - name: DATABASE_HOST
              value: {{ .Values.database.host }}
            {{- end }}
            {{- if and (not .Values.zalando_postgres.enabled) .Values.database.user }}
            - name: DATABASE_USER
              value: {{ .Values.database.user }}
            {{- end }}
            {{- if and (not .Values.zalando_postgres.enabled) .Values.database.password }}
            - name: DATABASE_PASSWORD
              value: {{ .Values.database.password }}
            {{- end }}
            {{- if .Values.database.tls.enabled }}
            - name: DATABASE_SSL_MODE
              value: {{ .Values.database.tls.enabled | quote }}
            {{- end }}
            {{- if .Values.database.connMaxLifetimeSeconds }}
            - name: DATABASE_CONN_MAX_LIFETIME_SECONDS
              value: {{ .Values.database.connMaxLifetimeSeconds | quote }}
            {{- end }}
            {{- if .Values.database.maxOpenConns }}
            - name: DATABASE_MAX_OPEN_CONNS
              value: {{ .Values.database.maxOpenConns | quote }}
            {{- end }}
            {{- if .Values.database.maxIdleConns }}
            - name: DATABASE_MAX_IDLE_CONNS
              value: {{ .Values.database.maxIdleConns | quote }}
            {{- end }}
            {{- if .Values.zalando_postgres.enabled }}
            - name: DATABASE_USER
              valueFrom:
                secretKeyRef:
                  name: {{ include "corndogs.zalando.posgresql.credentials.secret.name" . }}
                  key: username
            - name: DATABASE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "corndogs.zalando.posgresql.credentials.secret.name" . }}
                  key: password
            {{- end }}
          ports:
            - name: corndogsgrpc
              containerPort: 5080
              protocol: TCP
            {{- if .Values.appconfig.prometheusEnabled }}
            - name: corndogsmetrics
              containerPort: 8080
              protocol: TCP
            {{- end }}
          livenessProbe:
            exec:
              command:
                - "/grpc_health_probe"
                - "-addr=:5080"
          readinessProbe:
            exec:
              command:
                - "/grpc_health_probe"
                - "-addr=:5080"
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
